name: "Splunk eventtypes.conf file"
fileTypes: [
    "eventtypes.conf"
    "eventtypes.conf.spec"
    "eventtypes.conf.example"
    "eventtypes.conf.default"
]
scopeName: "source.splunk-conf.eventtypes"
patterns: [
    {
        include: "source.splunk-conf-comment"
    }
    {
        match: "^\\s*\\[.*?\\]\\s*$"
        name: "support.function.splunk-conf.eventtypes"
        comment: "eventtypes stanza"
    }
    {
        comment: "eventtypes configuration"
        match: "^\\s*(disabled|search|priority|description|tags)\\s*(=)\\s*(.*?)\\s*$"
        captures: {
            1: { name: "entity.name.function.splunk-conf.eventtypes" }
            2: { name: "keyword.operator.splunk-conf.eventtypes" }
            3: {
                patterns: [
                    { include: "#boolean_values" }
                    { include: "#number_values" }
                    { include: "#string_values" }
                ]
            }
        }
    }
    {
        comment: "color setting"
        match: "^\\s*(color)\\s*(=)\\s*(none|et_blue|et_green|et_magenta|et_orange,
  et_purple|et_red|et_sky|et_teal|et_yellow)?\\s*$"
        captures: {
            1: { name: "entity.name.function.splunk-conf.eventtypes" }
            2: { name: "keyword.operator.splunk-conf.eventtypes" }
            3: { name: "support.constant.splunk-conf.eventtypes" }
        }
    }
]
repository: {
    number_values: {
        match: "^\\s*\\d+?\\.?\\d*\\s*$"
        name: "constant.numeric.splunk-conf"
    }
    boolean_values: {
        match: "(?i)^\\s*(true|false|yes|no|y|n|1|0)\\s*$"
        name: "constant.language.splunk-conf"
    }
    string_values: {
        match: ".+"
        name: "string.splunk-conf.value"
    }
}
